name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            name: linux-amd64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: darwin-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-amd64

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare binary
        shell: bash
        run: |
          mkdir -p dist
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp target/${{ matrix.target }}/release/acv-inq.exe dist/acv-inq-${{ matrix.name }}.exe
          else
            cp target/${{ matrix.target }}/release/acv-inq dist/acv-inq-${{ matrix.name }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: acv-inq-${{ matrix.name }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Organize artifacts
        run: |
          mkdir -p dist
          find artifacts/ -name "acv-inq-*" -type f -exec cp {} dist/ \;
          ls -la dist/

      - name: Install Python and generate logo
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
          pip3 install pillow
          python3 scripts/generate_logo.py
          ls -la assets/
          echo "Logo gerada com sucesso!"

      - name: Copy install scripts
        run: |
          # Copiar scripts de instalaÃ§Ã£o existentes
          cp scripts/install.sh install.sh
          cp scripts/install.bat install.bat
          chmod +x install.sh

      - name: Create archives
        run: |
          # Linux GNU
          mkdir -p acv-inq-linux-amd64
          cp dist/acv-inq-linux-amd64 acv-inq-linux-amd64/acv-inq
          cp README.md LICENSE install.sh acv-inq-linux-amd64/
          cp assets/activity-inquirer.png acv-inq-linux-amd64/logo.png 2>/dev/null || echo "Logo nÃ£o encontrada, continuando..."
          cp assets/activity-inquirer.svg acv-inq-linux-amd64/logo.svg 2>/dev/null || echo "Logo SVG nÃ£o encontrada, continuando..."
          tar -czf acv-inq-linux-amd64.tar.gz acv-inq-linux-amd64/

          # macOS Intel
          mkdir -p acv-inq-darwin-amd64
          cp dist/acv-inq-darwin-amd64 acv-inq-darwin-amd64/acv-inq
          cp README.md LICENSE install.sh acv-inq-darwin-amd64/
          cp assets/activity-inquirer.png acv-inq-darwin-amd64/logo.png 2>/dev/null || echo "Logo nÃ£o encontrada, continuando..."
          cp assets/activity-inquirer.svg acv-inq-darwin-amd64/logo.svg 2>/dev/null || echo "Logo SVG nÃ£o encontrada, continuando..."
          tar -czf acv-inq-darwin-amd64.tar.gz acv-inq-darwin-amd64/

          # macOS Apple Silicon
          mkdir -p acv-inq-darwin-arm64
          cp dist/acv-inq-darwin-arm64 acv-inq-darwin-arm64/acv-inq
          cp README.md LICENSE install.sh acv-inq-darwin-arm64/
          cp assets/activity-inquirer.png acv-inq-darwin-arm64/logo.png 2>/dev/null || echo "Logo nÃ£o encontrada, continuando..."
          cp assets/activity-inquirer.svg acv-inq-darwin-arm64/logo.svg 2>/dev/null || echo "Logo SVG nÃ£o encontrada, continuando..."
          tar -czf acv-inq-darwin-arm64.tar.gz acv-inq-darwin-arm64/

          # Windows
          mkdir -p acv-inq-windows-amd64
          cp dist/acv-inq-windows-amd64.exe acv-inq-windows-amd64/acv-inq.exe
          cp README.md LICENSE scripts/install.bat acv-inq-windows-amd64/
          cp assets/activity-inquirer.png acv-inq-windows-amd64/logo.png 2>/dev/null || echo "Logo nÃ£o encontrada, continuando..."
          cp assets/activity-inquirer.svg acv-inq-windows-amd64/logo.svg 2>/dev/null || echo "Logo SVG nÃ£o encontrada, continuando..."
          cd acv-inq-windows-amd64 && zip -r ../acv-inq-windows-amd64.zip . && cd ..

      - name: Generate changelog
        id: changelog
        run: |
          if git describe --tags --abbrev=0 >/dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0)
            echo "## Changelog" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges >> CHANGELOG.md
          else
            echo "## ðŸŽ‰ Primeiro Release" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "VersÃ£o inicial do Activity Inquirer com todas as funcionalidades principais." >> CHANGELOG.md
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: |
            acv-inq-linux-amd64.tar.gz
            acv-inq-darwin-amd64.tar.gz
            acv-inq-darwin-arm64.tar.gz
            acv-inq-windows-amd64.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
